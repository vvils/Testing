name: 'Setup Docker and Kubernetes'
description: 'Configures Docker and Kubernetes for self-hosted runner'

inputs:
  dockerhub_username:
    description: 'Docker Hub username'
    required: true
  dockerhub_token:
    description: 'Docker Hub access token'
    required: true
  kube_config:
    description: 'Base64 encoded Kubernetes config'
    required: true

runs:
  using: "composite"
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.dockerhub_username }}
        password: ${{ inputs.dockerhub_token }}
        logout: false

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: "latest"

    - name: Configure Kubernetes access
      shell: bash
      env:
        KUBE_CONFIG_DATA: ${{ inputs.kube_config }}
      run: |
        # Create .kube directory
        mkdir -p $HOME/.kube
        
        # Set up Kubernetes config
        if [ -n "$KUBE_CONFIG_DATA" ]; then
          echo "Using Kubernetes config from secret"
          if ! echo "$KUBE_CONFIG_DATA" | base64 -d > $HOME/.kube/config; then
            echo "::error::Failed to decode Kubernetes config"
            exit 1
          fi
        elif [ -f "/home/wilson/.kube/config" ]; then
          echo "Using Kubernetes config from host"
          cp /home/wilson/.kube/config $HOME/.kube/config
        else
          echo "::error::No Kubernetes configuration found"
          exit 1
        fi
        
        # Set permissions
        chmod 600 $HOME/.kube/config
        
        # Configure environment variables
        echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV
        echo "DOCKER_HOST=unix:///var/run/docker.sock" >> $GITHUB_ENV
        
        # Test Kubernetes connection
        echo "Testing Kubernetes connection..."
        if ! kubectl cluster-info > /dev/null 2>&1; then
          echo "::warning::Kubernetes connection test failed, but continuing..."
        else
          echo "âœ… Kubernetes connection successful"
        fi 